# Generated by Django 4.1.7 on 2024-07-01 19:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image_filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('letra', models.CharField(default='P', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='MarcaAuto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca_auto', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Unidad_negocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidad', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='PeritajeApp.branch')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Peritaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.BigIntegerField(unique=True)),
                ('estado', models.CharField(choices=[('ACEPTADO', 'ACEPTADO'), ('ESPERA', 'ESPERA'), ('RECHAZADO', 'RECHAZADO'), ('RENDIDO', 'RENDIDO'), ('CREANDO', 'CREANDO'), ('ENVIADO', 'ENVIADO')], default='ESPERA', max_length=10)),
                ('codigo_peritaje', models.CharField(blank=True, max_length=15, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.branch')),
                ('destinatario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gastos_destinatario', to=settings.AUTH_USER_MODEL)),
                ('unidad_negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.unidad_negocio')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InspeccionGral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carroceria_general', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('carroceria_general_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('chapa', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('chapa_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pintura', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('pintura_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('motor', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('motor_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('diferencial', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('diferencial_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('embrague', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('embrague_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tren_delantero', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('tren_delantero_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tren_trasero', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('tren_trasero_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('direccion', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('direccion_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('frenos', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('frenos_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amortiguadores_tras', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('amortiguadores_tras_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amortiguadores_del', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('amortiguadores_del_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('arranque', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('arranque_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('radiadores', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('radiadores_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('electricidad', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('electricidad_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aacc_calefaccion', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('aacc_calefaccion_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('radio', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('radio_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bateria', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('bateria_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('llantas', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('llantas_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tasas', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('tasas_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('parabrisas', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('parabrisas_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('asientos', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('asientos_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tapizado', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('tapizado_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('volante', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('volante_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('freno_de_mano', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('freno_de_mano_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bagueta', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('bagueta_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('moldura', models.CharField(choices=[('NO', 'NO'), ('B', 'B'), ('R', 'R'), ('M', 'M')], default='', max_length=2)),
                ('moldura_gasto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('observaciones_gral', models.TextField(blank=True, verbose_name='ObservacionesGral')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='InspeccionCubiertas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca_delantera_derecha', models.CharField(choices=[('Bridgestone ', 'Bridgestone '), ('Continental ', 'Cntinental '), ('Pirelli', 'Pirelli'), ('Kumho', 'Kumho'), ('Good year', 'Good year'), ('Fate', 'Fate'), ('Firestone', 'Firestone'), ('Dunlop', 'Dunlop'), ('Michelin', 'Michelin'), ('Hankook', 'Hankook'), ('Otras', 'Otras')], default=False, max_length=50)),
                ('medidas_delantera_derecha', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="El formato de las medidas debe ser '000/00R00'.", regex='^\\d{3}/\\d{2}R\\d{2}$')])),
                ('vida_util_delantera_derecha', models.CharField(max_length=50)),
                ('gastos_delantera_derecha', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('marca_delantera_izquierda', models.CharField(choices=[('Bridgestone ', 'Bridgestone '), ('Continental ', 'Cntinental '), ('Pirelli', 'Pirelli'), ('Kumho', 'Kumho'), ('Good year', 'Good year'), ('Fate', 'Fate'), ('Firestone', 'Firestone'), ('Dunlop', 'Dunlop'), ('Michelin', 'Michelin'), ('Hankook', 'Hankook'), ('Otras', 'Otras')], default=False, max_length=50)),
                ('medidas_delantera_izquierda', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="El formato de las medidas debe ser '000/00R00'.", regex='^\\d{3}/\\d{2}R\\d{2}$')])),
                ('vida_util_delantera_izquierda', models.CharField(max_length=50)),
                ('gastos_delantera_izquierda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('marca_trasera_derecha', models.CharField(choices=[('Bridgestone ', 'Bridgestone '), ('Continental ', 'Cntinental '), ('Pirelli', 'Pirelli'), ('Kumho', 'Kumho'), ('Good year', 'Good year'), ('Fate', 'Fate'), ('Firestone', 'Firestone'), ('Dunlop', 'Dunlop'), ('Michelin', 'Michelin'), ('Hankook', 'Hankook'), ('Otras', 'Otras')], default=False, max_length=50)),
                ('medidas_trasera_derecha', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="El formato de las medidas debe ser '000/00R00'.", regex='^\\d{3}/\\d{2}R\\d{2}$')])),
                ('vida_util_trasera_derecha', models.CharField(max_length=50)),
                ('gastos_trasera_derecha', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('marca_trasera_izquierda', models.CharField(choices=[('Bridgestone ', 'Bridgestone '), ('Continental ', 'Cntinental '), ('Pirelli', 'Pirelli'), ('Kumho', 'Kumho'), ('Good year', 'Good year'), ('Fate', 'Fate'), ('Firestone', 'Firestone'), ('Dunlop', 'Dunlop'), ('Michelin', 'Michelin'), ('Hankook', 'Hankook'), ('Otras', 'Otras')], default=False, max_length=50)),
                ('medidas_trasera_izquierda', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="El formato de las medidas debe ser '000/00R00'.", regex='^\\d{3}/\\d{2}R\\d{2}$')])),
                ('vida_util_trasera_izquierda', models.CharField(max_length=50)),
                ('gastos_trasera_izquierda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('marca_auxilio', models.CharField(blank=True, choices=[('Bridgestone ', 'Bridgestone '), ('Continental ', 'Cntinental '), ('Pirelli', 'Pirelli'), ('Kumho', 'Kumho'), ('Good year', 'Good year'), ('Fate', 'Fate'), ('Firestone', 'Firestone'), ('Dunlop', 'Dunlop'), ('Michelin', 'Michelin'), ('Hankook', 'Hankook'), ('Otras', 'Otras')], default=False, max_length=50, null=True)),
                ('medidas_auxilio', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message="El formato de las medidas debe ser '000/00R00'.", regex='^\\d{3}/\\d{2}R\\d{2}$')])),
                ('vida_util_auxilio', models.CharField(blank=True, max_length=50, null=True)),
                ('gastos_auxilio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('observaciones_cubiertas', models.TextField(blank=True, verbose_name='Observaciones Cubiertas')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
            options={
                'verbose_name_plural': 'Inspecciones de Cubiertas',
            },
        ),
        migrations.CreateModel(
            name='ImagenMarcada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('ruta', models.CharField(max_length=255)),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='Gastos_total',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_gastos', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('valor_mercado', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_info_auto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_valor_toma', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='FotoPeritaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(max_length=255, upload_to='peritaje_fotos/', verbose_name='Foto del peritaje')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='Equipamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Aire_climatizador', models.BooleanField(default=False, verbose_name='Aire Climatizador')),
                ('DirElectricaoHidraulica', models.BooleanField(default=False, verbose_name='Dirección Electrónica/Hidráulica')),
                ('CierraCentralizado', models.BooleanField(default=False, verbose_name='Cierre Centralizado')),
                ('TechoCorredizo', models.BooleanField(default=False, verbose_name='Techo Corredizo')),
                ('LlantasDeAleacion', models.BooleanField(default=False, verbose_name='Llantas de Aleación')),
                ('Airbags', models.BooleanField(default=False, verbose_name='Airbags')),
                ('ABS', models.BooleanField(default=False, verbose_name='ABS ')),
                ('ESP', models.BooleanField(default=False, verbose_name='ESP')),
                ('Alarma', models.BooleanField(default=False, verbose_name='Alarma')),
                ('Polarizado', models.BooleanField(default=False, verbose_name='Polarizado')),
                ('GatoLlave', models.BooleanField(default=False, verbose_name='Gato y Llave para Ruedas')),
                ('StereoOriginal', models.BooleanField(default=False, verbose_name='Stereo Original')),
                ('EspejosElectricos', models.BooleanField(default=False, verbose_name='Espejos Eléctricos')),
                ('CamaraRetroceso', models.BooleanField(default=False, verbose_name='Cámara de Retroceso')),
                ('SensoresEst', models.BooleanField(default=False, verbose_name='Sensores de Estacionamiento')),
                ('Pantalla', models.BooleanField(default=False, verbose_name='Pantalla')),
                ('ControlVelCrucero', models.BooleanField(default=False, verbose_name='Control de Velocidad Crucero')),
                ('FarosAntiniebla', models.BooleanField(default=False, verbose_name='Faros Antiniebla')),
                ('DuplicadoLlave', models.BooleanField(default=False, verbose_name='Duplicado de Llave')),
                ('Manuales', models.BooleanField(default=False, verbose_name='Manuales')),
                ('CodigoStereo', models.BooleanField(default=False, verbose_name='Código de Stereo')),
                ('TuercaSeguridad', models.BooleanField(default=False, verbose_name='Tuerca de Seguridad')),
                ('Matafuegos', models.BooleanField(default=False, verbose_name='Matafuegos')),
                ('CortaCorriente', models.BooleanField(default=False, verbose_name='Corta Corriente')),
                ('AlzaCristales', models.CharField(choices=[('NO', 'No'), ('2', '2 Puertas'), ('4', '4 Puertas')], default='NO', max_length=2, verbose_name='Alza Cristales')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='CreadoPor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CochePeritaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_tasacion', models.DateTimeField(verbose_name='Fecha de Tasacion')),
                ('peritador', models.CharField(max_length=100, verbose_name='Peritador')),
                ('receptor', models.CharField(blank=True, max_length=100, null=True, verbose_name='Receptor')),
                ('fecha_recepcion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Recepcion')),
                ('provincia_Radicado', models.CharField(choices=[('Buenos Aires', 'Buenos Aires'), ('Ciudad Autónoma de Buenos Aires', 'Ciudad Autónoma de Buenos Aires'), ('Catamarca', 'Catamarca'), ('Chaco', 'Chaco'), ('Chubut', 'Chubut'), ('Córdoba', 'Córdoba'), ('Corrientes', 'Corrientes'), ('Entre Ríos', 'Entre Ríos'), ('Formosa', 'Formosa'), ('Jujuy', 'Jujuy'), ('La Pampa', 'La Pampa'), ('La Rioja', 'La Rioja'), ('Mendoza', 'Mendoza'), ('Misiones', 'Misiones'), ('Neuquén', 'Neuquén'), ('Río Negro', 'Río Negro'), ('Salta', 'Salta'), ('San Juan', 'San Juan'), ('San Luis', 'San Luis'), ('Santa Cruz', 'Santa Cruz'), ('Santa Fe', 'Santa Fe'), ('Santiago del Estero', 'Santiago del Estero'), ('Tierra del Fuego', 'Tierra del Fuego'), ('Tucumán', 'Tucumán')], default=False, max_length=100, verbose_name='Provincia Radicado')),
                ('vto_de_vto_o_itv', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='Vto de VTO o ITV')),
                ('patente', models.CharField(max_length=7, verbose_name='Patente')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo')),
                ('puertas', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default=False, max_length=10, verbose_name='Puertas')),
                ('man_aut', models.CharField(choices=[('Manual', 'Manual'), ('Automatico', 'Automatico')], default=False, max_length=50, verbose_name='Manual o Automatico')),
                ('combustible', models.CharField(choices=[('NAFTA', 'NAFTA'), ('DIESEL', 'DIESEL'), ('GNC', 'GNC')], default=False, max_length=50, verbose_name='Combustible')),
                ('color', models.CharField(choices=[('amarillo', 'Amarillo'), ('azul', 'Azul'), ('azul_metalico', 'Azul Metálico'), ('blanco', 'Blanco'), ('blanco_banquise', 'Blanco Banquise'), ('blanco_negro', 'Blanco / Negro'), ('borgona', 'Borgoña'), ('cassiopee', 'Cassiopee'), ('champagne', 'Champagne'), ('cobre', 'Cobre'), ('dorado', 'Dorado'), ('dune_beige', 'Dune Beige'), ('fuego', 'Fuego'), ('generico', 'Generico'), ('gris', 'Gris'), ('gris_etoile', 'Gris Etoile'), ('gris_perla', 'Gris Perla'), ('gris_plata', 'Gris Plata'), ('gris_quartz', 'Gris Quartz'), ('marron', 'Marrón'), ('naranja', 'Naranja'), ('negro', 'Negro'), ('plateado', 'Plateado'), ('rojo', 'Rojo'), ('rojo_fuego', 'Rojo Fuego'), ('rosa', 'Rosa'), ('turquesa', 'Turquesa'), ('verde', 'Verde'), ('verde_militar', 'Verde Militar'), ('violeta', 'Violeta')], default=False, max_length=50, verbose_name='Color')),
                ('año', models.IntegerField(verbose_name='Año')),
                ('km', models.BigIntegerField(verbose_name='Kilometraje')),
                ('dueño_mano', models.CharField(max_length=100, verbose_name='Dueño Mano')),
                ('ultimo_service_aceite_fecha', models.DateTimeField(verbose_name='Ultimo Service de Aceite (Fecha)')),
                ('ultimo_service_aceite_km', models.BigIntegerField(verbose_name='Ultimo Service de Aceite (Km)')),
                ('ultimo_cambio_distribucion_fecha', models.DateTimeField(blank=True, null=True, verbose_name='Ultimo Cambio de Distribucion (Fecha)')),
                ('ultimo_cambio_distribucion_km', models.BigIntegerField(blank=True, null=True, verbose_name='Ultimo Cambio de Distribucion (Km)')),
                ('gnc_vtohidraulica', models.DateTimeField(blank=True, null=True, verbose_name='GNC Vto Hidrulica')),
                ('gnc_vtooblea', models.DateTimeField(blank=True, null=True, verbose_name='GNC Vto Oblea')),
                ('gnc_metros', models.BigIntegerField(blank=True, null=True, verbose_name='GNC Metros')),
                ('gnc_generacion', models.BigIntegerField(blank=True, null=True, verbose_name='GNC Generacion')),
                ('bateria_marca', models.CharField(max_length=100, verbose_name='Bateria Marca')),
                ('bateria_medida', models.CharField(max_length=50, verbose_name='Bateria Medida')),
                ('bateria_ultimo_cambio', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de ultimo cambio bateria')),
                ('es_fecha_original', models.BooleanField(default=False)),
                ('marca', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.marcaauto')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
                ('vendedor', models.ForeignKey(default=False, on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.vendedor')),
            ],
        ),
        migrations.CreateModel(
            name='ClientePeritar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_apellido_entrega', models.CharField(max_length=200, verbose_name='Nombre y Apellido')),
                ('email_entrega', models.EmailField(blank=True, max_length=254, verbose_name='Email de Entrega')),
                ('cuil_entrega', models.CharField(blank=True, max_length=13, verbose_name='Cuil de Entrega')),
                ('telefono_entrega', models.CharField(max_length=100, verbose_name='Teléfono de Entrega')),
                ('nombre_apellido_duenio', models.CharField(blank=True, max_length=200, verbose_name='Nombre y Apellido del dueño')),
                ('email_duenio', models.EmailField(blank=True, max_length=254, verbose_name='Email del Dueño')),
                ('cuil_duenio', models.CharField(blank=True, max_length=13, verbose_name='Cuil de Dueño')),
                ('telefono_duenio', models.CharField(blank=True, max_length=100, verbose_name='Teléfono del Dueño')),
                ('peritaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
            ],
        ),
        migrations.CreateModel(
            name='Cambios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_cambio', models.DateTimeField(verbose_name='Fecha de Cambios')),
                ('peritaje_cambio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PeritajeApp.peritaje')),
                ('usuario_cambio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
